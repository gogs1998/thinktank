"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/messages/route";
exports.ids = ["app/api/messages/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmessages%2Froute&page=%2Fapi%2Fmessages%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmessages%2Froute.ts&appDir=D%3A%5CCursor%5CThinkTank%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5CThinkTank&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmessages%2Froute&page=%2Fapi%2Fmessages%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmessages%2Froute.ts&appDir=D%3A%5CCursor%5CThinkTank%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5CThinkTank&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_Cursor_ThinkTank_app_api_messages_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/messages/route.ts */ \"(rsc)/./app/api/messages/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/messages/route\",\n        pathname: \"/api/messages\",\n        filename: \"route\",\n        bundlePath: \"app/api/messages/route\"\n    },\n    resolvedPagePath: \"D:\\\\Cursor\\\\ThinkTank\\\\app\\\\api\\\\messages\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Cursor_ThinkTank_app_api_messages_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/messages/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtZXNzYWdlcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWVzc2FnZXMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZtZXNzYWdlcyUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDQ3Vyc29yJTVDVGhpbmtUYW5rJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDQ3Vyc29yJTVDVGhpbmtUYW5rJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNHO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGlib3QtY2hhdC1vcGVucm91dGVyLz80YzM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkQ6XFxcXEN1cnNvclxcXFxUaGlua1RhbmtcXFxcYXBwXFxcXGFwaVxcXFxtZXNzYWdlc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbWVzc2FnZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9tZXNzYWdlc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvbWVzc2FnZXMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxDdXJzb3JcXFxcVGhpbmtUYW5rXFxcXGFwcFxcXFxhcGlcXFxcbWVzc2FnZXNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL21lc3NhZ2VzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmessages%2Froute&page=%2Fapi%2Fmessages%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmessages%2Froute.ts&appDir=D%3A%5CCursor%5CThinkTank%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5CThinkTank&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/messages/route.ts":
/*!***********************************!*\
  !*** ./app/api/messages/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _lib_orchestrator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/orchestrator */ \"(rsc)/./lib/orchestrator.ts\");\n/* harmony import */ var _lib_mentions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/mentions */ \"(rsc)/./lib/mentions.ts\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nasync function GET(req) {\n    const threadId = req.nextUrl.searchParams.get(\"threadId\") || \"default\";\n    const thread = (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.listThread)(threadId);\n    return Response.json(thread);\n}\nasync function POST(req) {\n    const { threadId = \"default\", text, participants, mode, debate } = await req.json();\n    if (Array.isArray(participants)) {\n        const unique = Array.from(new Set(participants.filter((x)=>x && x !== \"user\")));\n        const limited = unique.slice(0, 4);\n        (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.setParticipants)(threadId, limited);\n    }\n    const userMsg = {\n        id: (0,crypto__WEBPACK_IMPORTED_MODULE_3__.randomUUID)(),\n        speaker: \"user\",\n        text,\n        ts: Date.now()\n    };\n    (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.saveMsg)(threadId, userMsg);\n    const t = (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.listThread)(threadId);\n    const baseParts = (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.getParticipants)(threadId);\n    const targeted = (0,_lib_mentions__WEBPACK_IMPORTED_MODULE_2__.filterParticipantsByMentions)(text || \"\", baseParts);\n    const replies = await (0,_lib_orchestrator__WEBPACK_IMPORTED_MODULE_1__.coordinatedReplies)(t.messages, targeted, mode);\n    replies.forEach((m)=>(0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.saveMsg)(threadId, m));\n    // Optional one debate round in council mode\n    if (mode === \"council\" && debate !== false) {\n        const debate = await (0,_lib_orchestrator__WEBPACK_IMPORTED_MODULE_1__.councilDebateRound)(t.messages, replies, mode);\n        debate.forEach((m)=>(0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.saveMsg)(threadId, m));\n        return Response.json({\n            ok: true,\n            replies: [\n                ...replies,\n                ...debate\n            ]\n        });\n    }\n    return Response.json({\n        ok: true,\n        replies\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL21lc3NhZ2VzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDc0Y7QUFDVjtBQUNkO0FBQzFCO0FBRTdCLGVBQWVRLElBQUlDLEdBQWdCO0lBQ3hDLE1BQU1DLFdBQVdELElBQUlFLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDQyxHQUFHLENBQUMsZUFBZTtJQUM3RCxNQUFNQyxTQUFTYixtREFBVUEsQ0FBQ1M7SUFDMUIsT0FBT0ssU0FBU0MsSUFBSSxDQUFDRjtBQUN2QjtBQUVPLGVBQWVHLEtBQUtSLEdBQWdCO0lBQ3pDLE1BQU0sRUFBRUMsV0FBVyxTQUFTLEVBQUVRLElBQUksRUFBRUMsWUFBWSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU1aLElBQUlPLElBQUk7SUFDakYsSUFBSU0sTUFBTUMsT0FBTyxDQUFDSixlQUFlO1FBQy9CLE1BQU1LLFNBQVNGLE1BQU1HLElBQUksQ0FBQyxJQUFJQyxJQUFJUCxhQUFhUSxNQUFNLENBQUMsQ0FBQ0MsSUFBY0EsS0FBS0EsTUFBTTtRQUNoRixNQUFNQyxVQUFVTCxPQUFPTSxLQUFLLENBQUMsR0FBRztRQUNoQzNCLHdEQUFlQSxDQUFDTyxVQUFVbUI7SUFDNUI7SUFFQSxNQUFNRSxVQUFlO1FBQUVDLElBQUl6QixrREFBVUE7UUFBSTBCLFNBQVM7UUFBUWY7UUFBTWdCLElBQUlDLEtBQUtDLEdBQUc7SUFBRztJQUMvRXBDLGdEQUFPQSxDQUFDVSxVQUFVcUI7SUFFbEIsTUFBTU0sSUFBSXBDLG1EQUFVQSxDQUFDUztJQUNyQixNQUFNNEIsWUFBWXBDLHdEQUFlQSxDQUFDUTtJQUNsQyxNQUFNNkIsV0FBV2pDLDJFQUE0QkEsQ0FBQ1ksUUFBUSxJQUFJb0I7SUFDMUQsTUFBTUUsVUFBVSxNQUFNcEMscUVBQWtCQSxDQUFDaUMsRUFBRUksUUFBUSxFQUFFRixVQUFVbkI7SUFDL0RvQixRQUFRRSxPQUFPLENBQUMsQ0FBQ0MsSUFBTTNDLGdEQUFPQSxDQUFDVSxVQUFVaUM7SUFFekMsNENBQTRDO0lBQzVDLElBQUl2QixTQUFTLGFBQWFDLFdBQVcsT0FBTztRQUMxQyxNQUFNQSxTQUFTLE1BQU1oQixxRUFBa0JBLENBQUNnQyxFQUFFSSxRQUFRLEVBQUVELFNBQVNwQjtRQUM3REMsT0FBT3FCLE9BQU8sQ0FBQyxDQUFDQyxJQUFNM0MsZ0RBQU9BLENBQUNVLFVBQVVpQztRQUN4QyxPQUFPNUIsU0FBU0MsSUFBSSxDQUFDO1lBQUU0QixJQUFJO1lBQU1KLFNBQVM7bUJBQUlBO21CQUFZbkI7YUFBTztRQUFDO0lBQ3BFO0lBRUEsT0FBT04sU0FBU0MsSUFBSSxDQUFDO1FBQUU0QixJQUFJO1FBQU1KO0lBQVE7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aWJvdC1jaGF0LW9wZW5yb3V0ZXIvLi9hcHAvYXBpL21lc3NhZ2VzL3JvdXRlLnRzPzBmZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IHNhdmVNc2csIGxpc3RUaHJlYWQsIGdldFBhcnRpY2lwYW50cywgc2V0UGFydGljaXBhbnRzLCBNc2cgfSBmcm9tIFwiQC9saWIvZGJcIjtcbmltcG9ydCB7IGNvb3JkaW5hdGVkUmVwbGllcywgY291bmNpbERlYmF0ZVJvdW5kIH0gZnJvbSBcIkAvbGliL29yY2hlc3RyYXRvclwiO1xuaW1wb3J0IHsgZmlsdGVyUGFydGljaXBhbnRzQnlNZW50aW9ucyB9IGZyb20gXCJAL2xpYi9tZW50aW9uc1wiO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCB9IGZyb20gXCJjcnlwdG9cIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIGNvbnN0IHRocmVhZElkID0gcmVxLm5leHRVcmwuc2VhcmNoUGFyYW1zLmdldChcInRocmVhZElkXCIpIHx8IFwiZGVmYXVsdFwiO1xuICBjb25zdCB0aHJlYWQgPSBsaXN0VGhyZWFkKHRocmVhZElkKTtcbiAgcmV0dXJuIFJlc3BvbnNlLmpzb24odGhyZWFkKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxOiBOZXh0UmVxdWVzdCkge1xuICBjb25zdCB7IHRocmVhZElkID0gXCJkZWZhdWx0XCIsIHRleHQsIHBhcnRpY2lwYW50cywgbW9kZSwgZGViYXRlIH0gPSBhd2FpdCByZXEuanNvbigpO1xuICBpZiAoQXJyYXkuaXNBcnJheShwYXJ0aWNpcGFudHMpKSB7XG4gICAgY29uc3QgdW5pcXVlID0gQXJyYXkuZnJvbShuZXcgU2V0KHBhcnRpY2lwYW50cy5maWx0ZXIoKHg6IHN0cmluZykgPT4geCAmJiB4ICE9PSBcInVzZXJcIikpKTtcbiAgICBjb25zdCBsaW1pdGVkID0gdW5pcXVlLnNsaWNlKDAsIDQpO1xuICAgIHNldFBhcnRpY2lwYW50cyh0aHJlYWRJZCwgbGltaXRlZCBhcyBzdHJpbmdbXSk7XG4gIH1cblxuICBjb25zdCB1c2VyTXNnOiBNc2cgPSB7IGlkOiByYW5kb21VVUlEKCksIHNwZWFrZXI6IFwidXNlclwiLCB0ZXh0LCB0czogRGF0ZS5ub3coKSB9O1xuICBzYXZlTXNnKHRocmVhZElkLCB1c2VyTXNnKTtcblxuICBjb25zdCB0ID0gbGlzdFRocmVhZCh0aHJlYWRJZCk7XG4gIGNvbnN0IGJhc2VQYXJ0cyA9IGdldFBhcnRpY2lwYW50cyh0aHJlYWRJZCk7XG4gIGNvbnN0IHRhcmdldGVkID0gZmlsdGVyUGFydGljaXBhbnRzQnlNZW50aW9ucyh0ZXh0IHx8IFwiXCIsIGJhc2VQYXJ0cyk7XG4gIGNvbnN0IHJlcGxpZXMgPSBhd2FpdCBjb29yZGluYXRlZFJlcGxpZXModC5tZXNzYWdlcywgdGFyZ2V0ZWQsIG1vZGUpO1xuICByZXBsaWVzLmZvckVhY2goKG0pID0+IHNhdmVNc2codGhyZWFkSWQsIG0pKTtcblxuICAvLyBPcHRpb25hbCBvbmUgZGViYXRlIHJvdW5kIGluIGNvdW5jaWwgbW9kZVxuICBpZiAobW9kZSA9PT0gXCJjb3VuY2lsXCIgJiYgZGViYXRlICE9PSBmYWxzZSkge1xuICAgIGNvbnN0IGRlYmF0ZSA9IGF3YWl0IGNvdW5jaWxEZWJhdGVSb3VuZCh0Lm1lc3NhZ2VzLCByZXBsaWVzLCBtb2RlKTtcbiAgICBkZWJhdGUuZm9yRWFjaCgobSkgPT4gc2F2ZU1zZyh0aHJlYWRJZCwgbSkpO1xuICAgIHJldHVybiBSZXNwb25zZS5qc29uKHsgb2s6IHRydWUsIHJlcGxpZXM6IFsuLi5yZXBsaWVzLCAuLi5kZWJhdGVdIH0pO1xuICB9XG5cbiAgcmV0dXJuIFJlc3BvbnNlLmpzb24oeyBvazogdHJ1ZSwgcmVwbGllcyB9KTtcbn1cbiJdLCJuYW1lcyI6WyJzYXZlTXNnIiwibGlzdFRocmVhZCIsImdldFBhcnRpY2lwYW50cyIsInNldFBhcnRpY2lwYW50cyIsImNvb3JkaW5hdGVkUmVwbGllcyIsImNvdW5jaWxEZWJhdGVSb3VuZCIsImZpbHRlclBhcnRpY2lwYW50c0J5TWVudGlvbnMiLCJyYW5kb21VVUlEIiwiR0VUIiwicmVxIiwidGhyZWFkSWQiLCJuZXh0VXJsIiwic2VhcmNoUGFyYW1zIiwiZ2V0IiwidGhyZWFkIiwiUmVzcG9uc2UiLCJqc29uIiwiUE9TVCIsInRleHQiLCJwYXJ0aWNpcGFudHMiLCJtb2RlIiwiZGViYXRlIiwiQXJyYXkiLCJpc0FycmF5IiwidW5pcXVlIiwiZnJvbSIsIlNldCIsImZpbHRlciIsIngiLCJsaW1pdGVkIiwic2xpY2UiLCJ1c2VyTXNnIiwiaWQiLCJzcGVha2VyIiwidHMiLCJEYXRlIiwibm93IiwidCIsImJhc2VQYXJ0cyIsInRhcmdldGVkIiwicmVwbGllcyIsIm1lc3NhZ2VzIiwiZm9yRWFjaCIsIm0iLCJvayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/messages/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addDoc: () => (/* binding */ addDoc),\n/* harmony export */   clearDocs: () => (/* binding */ clearDocs),\n/* harmony export */   getDocsText: () => (/* binding */ getDocsText),\n/* harmony export */   getOrCreateThread: () => (/* binding */ getOrCreateThread),\n/* harmony export */   getParticipants: () => (/* binding */ getParticipants),\n/* harmony export */   listDocs: () => (/* binding */ listDocs),\n/* harmony export */   listThread: () => (/* binding */ listThread),\n/* harmony export */   saveMsg: () => (/* binding */ saveMsg),\n/* harmony export */   setDocEnabled: () => (/* binding */ setDocEnabled),\n/* harmony export */   setParticipants: () => (/* binding */ setParticipants)\n/* harmony export */ });\nconst threads = new Map();\nfunction getOrCreateThread(id) {\n    if (!threads.has(id)) {\n        // Sensible defaults; users can change selection in the UI\n        threads.set(id, {\n            id,\n            title: \"New Thread\",\n            participants: [\n                \"x-ai/grok-4\",\n                \"anthropic/claude-3.5-sonnet\",\n                \"openai/gpt-4o-mini\"\n            ],\n            messages: [],\n            docs: []\n        });\n    }\n    return threads.get(id);\n}\nfunction saveMsg(threadId, msg) {\n    const t = getOrCreateThread(threadId);\n    t.messages.push(msg);\n}\nfunction listThread(threadId) {\n    return getOrCreateThread(threadId);\n}\nfunction setParticipants(threadId, parts) {\n    const t = getOrCreateThread(threadId);\n    t.participants = parts;\n}\nfunction getParticipants(threadId) {\n    return getOrCreateThread(threadId).participants;\n}\nfunction addDoc(threadId, doc) {\n    const t = getOrCreateThread(threadId);\n    t.docs.push(doc);\n}\nfunction listDocs(threadId) {\n    return getOrCreateThread(threadId).docs;\n}\nfunction setDocEnabled(threadId, docId, enabled) {\n    const t = getOrCreateThread(threadId);\n    const d = t.docs.find((x)=>x.id === docId);\n    if (d) d.enabled = enabled;\n}\nfunction clearDocs(threadId) {\n    const t = getOrCreateThread(threadId);\n    t.docs = [];\n}\nfunction tokenizeToSet(text) {\n    return new Set((text || \"\").toLowerCase().split(/[^a-z0-9]+/g).filter((w)=>w && w.length > 2));\n}\nfunction chunkText(text, chunkSize = 800, overlap = 100) {\n    const out = [];\n    let i = 0;\n    while(i < text.length){\n        const end = Math.min(text.length, i + chunkSize);\n        out.push(text.slice(i, end));\n        if (end === text.length) break;\n        i = end - overlap;\n        if (i < 0) i = 0;\n    }\n    return out;\n}\nfunction getDocsText(threadId, maxChars = 2000, query) {\n    const docs = listDocs(threadId).filter((d)=>d.enabled);\n    if (docs.length === 0) return \"\";\n    const queryTerms = tokenizeToSet(query || \"\");\n    const scoredChunks = [];\n    for (const d of docs){\n        const chunks = chunkText(d.text);\n        for (const c of chunks){\n            if (!queryTerms.size) {\n                scoredChunks.push({\n                    name: d.name,\n                    chunk: c,\n                    score: 1\n                });\n            } else {\n                const terms = tokenizeToSet(c);\n                let match = 0;\n                for (const t of queryTerms)if (terms.has(t)) match++;\n                if (match > 0) scoredChunks.push({\n                    name: d.name,\n                    chunk: c,\n                    score: match\n                });\n            }\n        }\n    }\n    scoredChunks.sort((a, b)=>b.score - a.score);\n    const selected = [];\n    let total = 0;\n    for (const s of scoredChunks){\n        const section = `# ${s.name}\\n${s.chunk}`;\n        if (total + section.length > maxChars) break;\n        selected.push(section);\n        total += section.length + 8;\n        if (selected.length >= 5) break;\n    }\n    const joined = selected.join(\"\\n\\n---\\n\\n\");\n    return joined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUlBLE1BQU1BLFVBQVUsSUFBSUM7QUFFYixTQUFTQyxrQkFBa0JDLEVBQVU7SUFDMUMsSUFBSSxDQUFDSCxRQUFRSSxHQUFHLENBQUNELEtBQUs7UUFDcEIsMERBQTBEO1FBQzFESCxRQUFRSyxHQUFHLENBQUNGLElBQUk7WUFDZEE7WUFDQUcsT0FBTztZQUNQQyxjQUFjO2dCQUFDO2dCQUFlO2dCQUErQjthQUFxQjtZQUNsRkMsVUFBVSxFQUFFO1lBQ1pDLE1BQU0sRUFBRTtRQUNWO0lBQ0Y7SUFDQSxPQUFPVCxRQUFRVSxHQUFHLENBQUNQO0FBQ3JCO0FBRU8sU0FBU1EsUUFBUUMsUUFBZ0IsRUFBRUMsR0FBUTtJQUNoRCxNQUFNQyxJQUFJWixrQkFBa0JVO0lBQzVCRSxFQUFFTixRQUFRLENBQUNPLElBQUksQ0FBQ0Y7QUFDbEI7QUFFTyxTQUFTRyxXQUFXSixRQUFnQjtJQUN6QyxPQUFPVixrQkFBa0JVO0FBQzNCO0FBRU8sU0FBU0ssZ0JBQWdCTCxRQUFnQixFQUFFTSxLQUFlO0lBQy9ELE1BQU1KLElBQUlaLGtCQUFrQlU7SUFDNUJFLEVBQUVQLFlBQVksR0FBR1c7QUFDbkI7QUFFTyxTQUFTQyxnQkFBZ0JQLFFBQWdCO0lBQzlDLE9BQU9WLGtCQUFrQlUsVUFBVUwsWUFBWTtBQUNqRDtBQUVPLFNBQVNhLE9BQU9SLFFBQWdCLEVBQUVTLEdBQVE7SUFDL0MsTUFBTVAsSUFBSVosa0JBQWtCVTtJQUM1QkUsRUFBRUwsSUFBSSxDQUFDTSxJQUFJLENBQUNNO0FBQ2Q7QUFFTyxTQUFTQyxTQUFTVixRQUFnQjtJQUN2QyxPQUFPVixrQkFBa0JVLFVBQVVILElBQUk7QUFDekM7QUFFTyxTQUFTYyxjQUFjWCxRQUFnQixFQUFFWSxLQUFhLEVBQUVDLE9BQWdCO0lBQzdFLE1BQU1YLElBQUlaLGtCQUFrQlU7SUFDNUIsTUFBTWMsSUFBSVosRUFBRUwsSUFBSSxDQUFDa0IsSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUV6QixFQUFFLEtBQUtxQjtJQUN0QyxJQUFJRSxHQUFHQSxFQUFFRCxPQUFPLEdBQUdBO0FBQ3JCO0FBRU8sU0FBU0ksVUFBVWpCLFFBQWdCO0lBQ3hDLE1BQU1FLElBQUlaLGtCQUFrQlU7SUFDNUJFLEVBQUVMLElBQUksR0FBRyxFQUFFO0FBQ2I7QUFFQSxTQUFTcUIsY0FBY0MsSUFBWTtJQUNqQyxPQUFPLElBQUlDLElBQUksQ0FBQ0QsUUFBUSxFQUFDLEVBQUdFLFdBQVcsR0FBR0MsS0FBSyxDQUFDLGVBQWVDLE1BQU0sQ0FBQyxDQUFDQyxJQUFNQSxLQUFLQSxFQUFFQyxNQUFNLEdBQUc7QUFDL0Y7QUFFQSxTQUFTQyxVQUFVUCxJQUFZLEVBQUVRLFlBQVksR0FBRyxFQUFFQyxVQUFVLEdBQUc7SUFDN0QsTUFBTUMsTUFBZ0IsRUFBRTtJQUN4QixJQUFJQyxJQUFJO0lBQ1IsTUFBT0EsSUFBSVgsS0FBS00sTUFBTSxDQUFFO1FBQ3RCLE1BQU1NLE1BQU1DLEtBQUtDLEdBQUcsQ0FBQ2QsS0FBS00sTUFBTSxFQUFFSyxJQUFJSDtRQUN0Q0UsSUFBSTFCLElBQUksQ0FBQ2dCLEtBQUtlLEtBQUssQ0FBQ0osR0FBR0M7UUFDdkIsSUFBSUEsUUFBUVosS0FBS00sTUFBTSxFQUFFO1FBQ3pCSyxJQUFJQyxNQUFNSDtRQUNWLElBQUlFLElBQUksR0FBR0EsSUFBSTtJQUNqQjtJQUNBLE9BQU9EO0FBQ1Q7QUFFTyxTQUFTTSxZQUFZbkMsUUFBZ0IsRUFBRW9DLFdBQVcsSUFBSSxFQUFFQyxLQUFjO0lBQzNFLE1BQU14QyxPQUFPYSxTQUFTVixVQUFVdUIsTUFBTSxDQUFDLENBQUNULElBQU1BLEVBQUVELE9BQU87SUFDdkQsSUFBSWhCLEtBQUs0QixNQUFNLEtBQUssR0FBRyxPQUFPO0lBRTlCLE1BQU1hLGFBQWFwQixjQUFjbUIsU0FBUztJQUUxQyxNQUFNRSxlQUF5QixFQUFFO0lBQ2pDLEtBQUssTUFBTXpCLEtBQUtqQixLQUFNO1FBQ3BCLE1BQU0yQyxTQUFTZCxVQUFVWixFQUFFSyxJQUFJO1FBQy9CLEtBQUssTUFBTXNCLEtBQUtELE9BQVE7WUFDdEIsSUFBSSxDQUFDRixXQUFXSSxJQUFJLEVBQUU7Z0JBQ3BCSCxhQUFhcEMsSUFBSSxDQUFDO29CQUFFd0MsTUFBTTdCLEVBQUU2QixJQUFJO29CQUFFQyxPQUFPSDtvQkFBR0ksT0FBTztnQkFBRTtZQUN2RCxPQUFPO2dCQUNMLE1BQU1DLFFBQVE1QixjQUFjdUI7Z0JBQzVCLElBQUlNLFFBQVE7Z0JBQ1osS0FBSyxNQUFNN0MsS0FBS29DLFdBQVksSUFBSVEsTUFBTXRELEdBQUcsQ0FBQ1UsSUFBSTZDO2dCQUM5QyxJQUFJQSxRQUFRLEdBQUdSLGFBQWFwQyxJQUFJLENBQUM7b0JBQUV3QyxNQUFNN0IsRUFBRTZCLElBQUk7b0JBQUVDLE9BQU9IO29CQUFHSSxPQUFPRTtnQkFBTTtZQUMxRTtRQUNGO0lBQ0Y7SUFDQVIsYUFBYVMsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1BLEVBQUVMLEtBQUssR0FBR0ksRUFBRUosS0FBSztJQUM3QyxNQUFNTSxXQUFxQixFQUFFO0lBQzdCLElBQUlDLFFBQVE7SUFDWixLQUFLLE1BQU1DLEtBQUtkLGFBQWM7UUFDNUIsTUFBTWUsVUFBVSxDQUFDLEVBQUUsRUFBRUQsRUFBRVYsSUFBSSxDQUFDLEVBQUUsRUFBRVUsRUFBRVQsS0FBSyxDQUFDLENBQUM7UUFDekMsSUFBSVEsUUFBUUUsUUFBUTdCLE1BQU0sR0FBR1csVUFBVTtRQUN2Q2UsU0FBU2hELElBQUksQ0FBQ21EO1FBQ2RGLFNBQVNFLFFBQVE3QixNQUFNLEdBQUc7UUFDMUIsSUFBSTBCLFNBQVMxQixNQUFNLElBQUksR0FBRztJQUM1QjtJQUNBLE1BQU04QixTQUFTSixTQUFTSyxJQUFJLENBQUM7SUFDN0IsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpYm90LWNoYXQtb3BlbnJvdXRlci8uL2xpYi9kYi50cz8xZGYwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIE1zZyA9IHsgaWQ6IHN0cmluZzsgc3BlYWtlcjogc3RyaW5nOyB0ZXh0OiBzdHJpbmc7IHRzOiBudW1iZXI7IGNvbmZpZGVuY2U/OiBudW1iZXIgfTtcbmV4cG9ydCB0eXBlIERvYyA9IHsgaWQ6IHN0cmluZzsgbmFtZTogc3RyaW5nOyB0ZXh0OiBzdHJpbmc7IHRzOiBudW1iZXI7IGVuYWJsZWQ6IGJvb2xlYW4gfTtcbmV4cG9ydCB0eXBlIFRocmVhZCA9IHsgaWQ6IHN0cmluZzsgdGl0bGU6IHN0cmluZzsgcGFydGljaXBhbnRzOiBzdHJpbmdbXTsgbWVzc2FnZXM6IE1zZ1tdOyBkb2NzOiBEb2NbXSB9O1xuXG5jb25zdCB0aHJlYWRzID0gbmV3IE1hcDxzdHJpbmcsIFRocmVhZD4oKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldE9yQ3JlYXRlVGhyZWFkKGlkOiBzdHJpbmcpOiBUaHJlYWQge1xuICBpZiAoIXRocmVhZHMuaGFzKGlkKSkge1xuICAgIC8vIFNlbnNpYmxlIGRlZmF1bHRzOyB1c2VycyBjYW4gY2hhbmdlIHNlbGVjdGlvbiBpbiB0aGUgVUlcbiAgICB0aHJlYWRzLnNldChpZCwge1xuICAgICAgaWQsXG4gICAgICB0aXRsZTogXCJOZXcgVGhyZWFkXCIsXG4gICAgICBwYXJ0aWNpcGFudHM6IFtcIngtYWkvZ3Jvay00XCIsIFwiYW50aHJvcGljL2NsYXVkZS0zLjUtc29ubmV0XCIsIFwib3BlbmFpL2dwdC00by1taW5pXCJdLFxuICAgICAgbWVzc2FnZXM6IFtdLFxuICAgICAgZG9jczogW10sXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHRocmVhZHMuZ2V0KGlkKSE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlTXNnKHRocmVhZElkOiBzdHJpbmcsIG1zZzogTXNnKSB7XG4gIGNvbnN0IHQgPSBnZXRPckNyZWF0ZVRocmVhZCh0aHJlYWRJZCk7XG4gIHQubWVzc2FnZXMucHVzaChtc2cpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlzdFRocmVhZCh0aHJlYWRJZDogc3RyaW5nKTogVGhyZWFkIHtcbiAgcmV0dXJuIGdldE9yQ3JlYXRlVGhyZWFkKHRocmVhZElkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldFBhcnRpY2lwYW50cyh0aHJlYWRJZDogc3RyaW5nLCBwYXJ0czogc3RyaW5nW10pIHtcbiAgY29uc3QgdCA9IGdldE9yQ3JlYXRlVGhyZWFkKHRocmVhZElkKTtcbiAgdC5wYXJ0aWNpcGFudHMgPSBwYXJ0cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBhcnRpY2lwYW50cyh0aHJlYWRJZDogc3RyaW5nKTogc3RyaW5nW10ge1xuICByZXR1cm4gZ2V0T3JDcmVhdGVUaHJlYWQodGhyZWFkSWQpLnBhcnRpY2lwYW50cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZERvYyh0aHJlYWRJZDogc3RyaW5nLCBkb2M6IERvYykge1xuICBjb25zdCB0ID0gZ2V0T3JDcmVhdGVUaHJlYWQodGhyZWFkSWQpO1xuICB0LmRvY3MucHVzaChkb2MpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlzdERvY3ModGhyZWFkSWQ6IHN0cmluZyk6IERvY1tdIHtcbiAgcmV0dXJuIGdldE9yQ3JlYXRlVGhyZWFkKHRocmVhZElkKS5kb2NzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0RG9jRW5hYmxlZCh0aHJlYWRJZDogc3RyaW5nLCBkb2NJZDogc3RyaW5nLCBlbmFibGVkOiBib29sZWFuKSB7XG4gIGNvbnN0IHQgPSBnZXRPckNyZWF0ZVRocmVhZCh0aHJlYWRJZCk7XG4gIGNvbnN0IGQgPSB0LmRvY3MuZmluZCgoeCkgPT4geC5pZCA9PT0gZG9jSWQpO1xuICBpZiAoZCkgZC5lbmFibGVkID0gZW5hYmxlZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyRG9jcyh0aHJlYWRJZDogc3RyaW5nKSB7XG4gIGNvbnN0IHQgPSBnZXRPckNyZWF0ZVRocmVhZCh0aHJlYWRJZCk7XG4gIHQuZG9jcyA9IFtdO1xufVxuXG5mdW5jdGlvbiB0b2tlbml6ZVRvU2V0KHRleHQ6IHN0cmluZyk6IFNldDxzdHJpbmc+IHtcbiAgcmV0dXJuIG5ldyBTZXQoKHRleHQgfHwgXCJcIikudG9Mb3dlckNhc2UoKS5zcGxpdCgvW15hLXowLTldKy9nKS5maWx0ZXIoKHcpID0+IHcgJiYgdy5sZW5ndGggPiAyKSk7XG59XG5cbmZ1bmN0aW9uIGNodW5rVGV4dCh0ZXh0OiBzdHJpbmcsIGNodW5rU2l6ZSA9IDgwMCwgb3ZlcmxhcCA9IDEwMCk6IHN0cmluZ1tdIHtcbiAgY29uc3Qgb3V0OiBzdHJpbmdbXSA9IFtdO1xuICBsZXQgaSA9IDA7XG4gIHdoaWxlIChpIDwgdGV4dC5sZW5ndGgpIHtcbiAgICBjb25zdCBlbmQgPSBNYXRoLm1pbih0ZXh0Lmxlbmd0aCwgaSArIGNodW5rU2l6ZSk7XG4gICAgb3V0LnB1c2godGV4dC5zbGljZShpLCBlbmQpKTtcbiAgICBpZiAoZW5kID09PSB0ZXh0Lmxlbmd0aCkgYnJlYWs7XG4gICAgaSA9IGVuZCAtIG92ZXJsYXA7XG4gICAgaWYgKGkgPCAwKSBpID0gMDtcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9jc1RleHQodGhyZWFkSWQ6IHN0cmluZywgbWF4Q2hhcnMgPSAyMDAwLCBxdWVyeT86IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGRvY3MgPSBsaXN0RG9jcyh0aHJlYWRJZCkuZmlsdGVyKChkKSA9PiBkLmVuYWJsZWQpO1xuICBpZiAoZG9jcy5sZW5ndGggPT09IDApIHJldHVybiBcIlwiO1xuXG4gIGNvbnN0IHF1ZXJ5VGVybXMgPSB0b2tlbml6ZVRvU2V0KHF1ZXJ5IHx8IFwiXCIpO1xuICB0eXBlIFNjb3JlZCA9IHsgbmFtZTogc3RyaW5nOyBjaHVuazogc3RyaW5nOyBzY29yZTogbnVtYmVyIH07XG4gIGNvbnN0IHNjb3JlZENodW5rczogU2NvcmVkW10gPSBbXTtcbiAgZm9yIChjb25zdCBkIG9mIGRvY3MpIHtcbiAgICBjb25zdCBjaHVua3MgPSBjaHVua1RleHQoZC50ZXh0KTtcbiAgICBmb3IgKGNvbnN0IGMgb2YgY2h1bmtzKSB7XG4gICAgICBpZiAoIXF1ZXJ5VGVybXMuc2l6ZSkge1xuICAgICAgICBzY29yZWRDaHVua3MucHVzaCh7IG5hbWU6IGQubmFtZSwgY2h1bms6IGMsIHNjb3JlOiAxIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgdGVybXMgPSB0b2tlbml6ZVRvU2V0KGMpO1xuICAgICAgICBsZXQgbWF0Y2ggPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IHQgb2YgcXVlcnlUZXJtcykgaWYgKHRlcm1zLmhhcyh0KSkgbWF0Y2grKztcbiAgICAgICAgaWYgKG1hdGNoID4gMCkgc2NvcmVkQ2h1bmtzLnB1c2goeyBuYW1lOiBkLm5hbWUsIGNodW5rOiBjLCBzY29yZTogbWF0Y2ggfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHNjb3JlZENodW5rcy5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSk7XG4gIGNvbnN0IHNlbGVjdGVkOiBzdHJpbmdbXSA9IFtdO1xuICBsZXQgdG90YWwgPSAwO1xuICBmb3IgKGNvbnN0IHMgb2Ygc2NvcmVkQ2h1bmtzKSB7XG4gICAgY29uc3Qgc2VjdGlvbiA9IGAjICR7cy5uYW1lfVxcbiR7cy5jaHVua31gO1xuICAgIGlmICh0b3RhbCArIHNlY3Rpb24ubGVuZ3RoID4gbWF4Q2hhcnMpIGJyZWFrO1xuICAgIHNlbGVjdGVkLnB1c2goc2VjdGlvbik7XG4gICAgdG90YWwgKz0gc2VjdGlvbi5sZW5ndGggKyA4O1xuICAgIGlmIChzZWxlY3RlZC5sZW5ndGggPj0gNSkgYnJlYWs7XG4gIH1cbiAgY29uc3Qgam9pbmVkID0gc2VsZWN0ZWQuam9pbihcIlxcblxcbi0tLVxcblxcblwiKTtcbiAgcmV0dXJuIGpvaW5lZDtcbn1cbiJdLCJuYW1lcyI6WyJ0aHJlYWRzIiwiTWFwIiwiZ2V0T3JDcmVhdGVUaHJlYWQiLCJpZCIsImhhcyIsInNldCIsInRpdGxlIiwicGFydGljaXBhbnRzIiwibWVzc2FnZXMiLCJkb2NzIiwiZ2V0Iiwic2F2ZU1zZyIsInRocmVhZElkIiwibXNnIiwidCIsInB1c2giLCJsaXN0VGhyZWFkIiwic2V0UGFydGljaXBhbnRzIiwicGFydHMiLCJnZXRQYXJ0aWNpcGFudHMiLCJhZGREb2MiLCJkb2MiLCJsaXN0RG9jcyIsInNldERvY0VuYWJsZWQiLCJkb2NJZCIsImVuYWJsZWQiLCJkIiwiZmluZCIsIngiLCJjbGVhckRvY3MiLCJ0b2tlbml6ZVRvU2V0IiwidGV4dCIsIlNldCIsInRvTG93ZXJDYXNlIiwic3BsaXQiLCJmaWx0ZXIiLCJ3IiwibGVuZ3RoIiwiY2h1bmtUZXh0IiwiY2h1bmtTaXplIiwib3ZlcmxhcCIsIm91dCIsImkiLCJlbmQiLCJNYXRoIiwibWluIiwic2xpY2UiLCJnZXREb2NzVGV4dCIsIm1heENoYXJzIiwicXVlcnkiLCJxdWVyeVRlcm1zIiwic2NvcmVkQ2h1bmtzIiwiY2h1bmtzIiwiYyIsInNpemUiLCJuYW1lIiwiY2h1bmsiLCJzY29yZSIsInRlcm1zIiwibWF0Y2giLCJzb3J0IiwiYSIsImIiLCJzZWxlY3RlZCIsInRvdGFsIiwicyIsInNlY3Rpb24iLCJqb2luZWQiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/mentions.ts":
/*!*************************!*\
  !*** ./lib/mentions.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MENTION_ALIASES: () => (/* binding */ MENTION_ALIASES),\n/* harmony export */   extractMentionAliases: () => (/* binding */ extractMentionAliases),\n/* harmony export */   filterParticipantsByMentions: () => (/* binding */ filterParticipantsByMentions)\n/* harmony export */ });\n// Utilities to allow addressing models by name/alias in the user message.\nconst MENTION_ALIASES = {\n    grok: [\n        \"grok\",\n        \"grok-4\"\n    ],\n    claude: [\n        \"claude\",\n        \"sonnet\",\n        \"haiku\"\n    ],\n    gpt4o: [\n        \"gpt-4o\",\n        \"gpt-4o-mini\"\n    ],\n    gpt41: [\n        \"gpt-4.1\",\n        \"gpt-4.1-mini\"\n    ],\n    gpt: [\n        \"gpt\"\n    ]\n};\nfunction shortModelId(id) {\n    const parts = (id || \"\").split(\"/\");\n    return parts[parts.length - 1] || id;\n}\nfunction tokenize(text) {\n    return (text || \"\").toLowerCase().replace(/[@#]/g, \" \").split(/[^a-z0-9+_.-]+/g).filter(Boolean);\n}\nfunction extractMentionAliases(text) {\n    const tokens = tokenize(text);\n    const hits = new Set();\n    for (const [key, vals] of Object.entries(MENTION_ALIASES)){\n        for (const v of vals){\n            if (tokens.includes(v) || (text || \"\").toLowerCase().includes(v)) {\n                hits.add(key);\n            }\n        }\n    }\n    return Array.from(hits);\n}\nfunction extractAtTokens(text) {\n    const out = [];\n    const re = /@([A-Za-z0-9._-]+)/g;\n    let m;\n    while(m = re.exec(text || \"\")){\n        const tok = (m[1] || \"\").toLowerCase();\n        if (tok) out.push(tok);\n    }\n    return out;\n}\nfunction filterParticipantsByMentions(text, participants) {\n    const aliasGroups = extractMentionAliases(text); // keys like 'grok', 'claude'\n    const aliasTerms = aliasGroups.flatMap((k)=>MENTION_ALIASES[k] || []);\n    const atTerms = extractAtTokens(text);\n    const searchTerms = Array.from(new Set([\n        ...aliasTerms,\n        ...atTerms\n    ])).map((s)=>s.toLowerCase());\n    if (searchTerms.length === 0) return participants;\n    const filtered = participants.filter((fullId)=>{\n        const sid = shortModelId(fullId).toLowerCase();\n        return searchTerms.some((term)=>sid.includes(term));\n    });\n    // If nothing matched, fall back to original list so we never return empty\n    return filtered.length > 0 ? filtered : participants;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbWVudGlvbnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsMEVBQTBFO0FBRW5FLE1BQU1BLGtCQUE0QztJQUN2REMsTUFBTTtRQUFDO1FBQVE7S0FBUztJQUN4QkMsUUFBUTtRQUFDO1FBQVU7UUFBVTtLQUFRO0lBQ3JDQyxPQUFPO1FBQUM7UUFBVTtLQUFjO0lBQ2hDQyxPQUFPO1FBQUM7UUFBVztLQUFlO0lBQ2xDQyxLQUFLO1FBQUM7S0FBTTtBQUNkLEVBQUU7QUFFRixTQUFTQyxhQUFhQyxFQUFVO0lBQzlCLE1BQU1DLFFBQVEsQ0FBQ0QsTUFBTSxFQUFDLEVBQUdFLEtBQUssQ0FBQztJQUMvQixPQUFPRCxLQUFLLENBQUNBLE1BQU1FLE1BQU0sR0FBRyxFQUFFLElBQUlIO0FBQ3BDO0FBRUEsU0FBU0ksU0FBU0MsSUFBWTtJQUM1QixPQUFPLENBQUNBLFFBQVEsRUFBQyxFQUNkQyxXQUFXLEdBQ1hDLE9BQU8sQ0FBQyxTQUFTLEtBQ2pCTCxLQUFLLENBQUMsbUJBQ05NLE1BQU0sQ0FBQ0M7QUFDWjtBQUVPLFNBQVNDLHNCQUFzQkwsSUFBWTtJQUNoRCxNQUFNTSxTQUFTUCxTQUFTQztJQUN4QixNQUFNTyxPQUFPLElBQUlDO0lBQ2pCLEtBQUssTUFBTSxDQUFDQyxLQUFLQyxLQUFLLElBQUlDLE9BQU9DLE9BQU8sQ0FBQ3hCLGlCQUFrQjtRQUN6RCxLQUFLLE1BQU15QixLQUFLSCxLQUFNO1lBQ3BCLElBQUlKLE9BQU9RLFFBQVEsQ0FBQ0QsTUFBTSxDQUFDYixRQUFRLEVBQUMsRUFBR0MsV0FBVyxHQUFHYSxRQUFRLENBQUNELElBQUk7Z0JBQ2hFTixLQUFLUSxHQUFHLENBQUNOO1lBQ1g7UUFDRjtJQUNGO0lBQ0EsT0FBT08sTUFBTUMsSUFBSSxDQUFDVjtBQUNwQjtBQUVBLFNBQVNXLGdCQUFnQmxCLElBQVk7SUFDbkMsTUFBTW1CLE1BQWdCLEVBQUU7SUFDeEIsTUFBTUMsS0FBSztJQUNYLElBQUlDO0lBQ0osTUFBUUEsSUFBSUQsR0FBR0UsSUFBSSxDQUFDdEIsUUFBUSxJQUFNO1FBQ2hDLE1BQU11QixNQUFNLENBQUNGLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBQyxFQUFHcEIsV0FBVztRQUNwQyxJQUFJc0IsS0FBS0osSUFBSUssSUFBSSxDQUFDRDtJQUNwQjtJQUNBLE9BQU9KO0FBQ1Q7QUFFTyxTQUFTTSw2QkFBNkJ6QixJQUFZLEVBQUUwQixZQUFzQjtJQUMvRSxNQUFNQyxjQUFjdEIsc0JBQXNCTCxPQUFPLDZCQUE2QjtJQUM5RSxNQUFNNEIsYUFBYUQsWUFBWUUsT0FBTyxDQUFDLENBQUNDLElBQU0xQyxlQUFlLENBQUMwQyxFQUFFLElBQUksRUFBRTtJQUN0RSxNQUFNQyxVQUFVYixnQkFBZ0JsQjtJQUNoQyxNQUFNZ0MsY0FBY2hCLE1BQU1DLElBQUksQ0FBQyxJQUFJVCxJQUFJO1dBQUlvQjtXQUFlRztLQUFRLEdBQUdFLEdBQUcsQ0FBQyxDQUFDQyxJQUFNQSxFQUFFakMsV0FBVztJQUM3RixJQUFJK0IsWUFBWWxDLE1BQU0sS0FBSyxHQUFHLE9BQU80QjtJQUVyQyxNQUFNUyxXQUFXVCxhQUFhdkIsTUFBTSxDQUFDLENBQUNpQztRQUNwQyxNQUFNQyxNQUFNM0MsYUFBYTBDLFFBQVFuQyxXQUFXO1FBQzVDLE9BQU8rQixZQUFZTSxJQUFJLENBQUMsQ0FBQ0MsT0FBU0YsSUFBSXZCLFFBQVEsQ0FBQ3lCO0lBQ2pEO0lBQ0EsMEVBQTBFO0lBQzFFLE9BQU9KLFNBQVNyQyxNQUFNLEdBQUcsSUFBSXFDLFdBQVdUO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGlib3QtY2hhdC1vcGVucm91dGVyLy4vbGliL21lbnRpb25zLnRzPzBlZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVXRpbGl0aWVzIHRvIGFsbG93IGFkZHJlc3NpbmcgbW9kZWxzIGJ5IG5hbWUvYWxpYXMgaW4gdGhlIHVzZXIgbWVzc2FnZS5cclxuXHJcbmV4cG9ydCBjb25zdCBNRU5USU9OX0FMSUFTRVM6IFJlY29yZDxzdHJpbmcsIHN0cmluZ1tdPiA9IHtcclxuICBncm9rOiBbXCJncm9rXCIsIFwiZ3Jvay00XCJdLFxyXG4gIGNsYXVkZTogW1wiY2xhdWRlXCIsIFwic29ubmV0XCIsIFwiaGFpa3VcIl0sXHJcbiAgZ3B0NG86IFtcImdwdC00b1wiLCBcImdwdC00by1taW5pXCJdLFxyXG4gIGdwdDQxOiBbXCJncHQtNC4xXCIsIFwiZ3B0LTQuMS1taW5pXCJdLFxyXG4gIGdwdDogW1wiZ3B0XCJdLFxyXG59O1xyXG5cclxuZnVuY3Rpb24gc2hvcnRNb2RlbElkKGlkOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIGNvbnN0IHBhcnRzID0gKGlkIHx8IFwiXCIpLnNwbGl0KFwiL1wiKTtcclxuICByZXR1cm4gcGFydHNbcGFydHMubGVuZ3RoIC0gMV0gfHwgaWQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRva2VuaXplKHRleHQ6IHN0cmluZyk6IHN0cmluZ1tdIHtcclxuICByZXR1cm4gKHRleHQgfHwgXCJcIilcclxuICAgIC50b0xvd2VyQ2FzZSgpXHJcbiAgICAucmVwbGFjZSgvW0AjXS9nLCBcIiBcIilcclxuICAgIC5zcGxpdCgvW15hLXowLTkrXy4tXSsvZylcclxuICAgIC5maWx0ZXIoQm9vbGVhbik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0TWVudGlvbkFsaWFzZXModGV4dDogc3RyaW5nKTogc3RyaW5nW10ge1xyXG4gIGNvbnN0IHRva2VucyA9IHRva2VuaXplKHRleHQpO1xyXG4gIGNvbnN0IGhpdHMgPSBuZXcgU2V0PHN0cmluZz4oKTtcclxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHNdIG9mIE9iamVjdC5lbnRyaWVzKE1FTlRJT05fQUxJQVNFUykpIHtcclxuICAgIGZvciAoY29uc3QgdiBvZiB2YWxzKSB7XHJcbiAgICAgIGlmICh0b2tlbnMuaW5jbHVkZXModikgfHwgKHRleHQgfHwgXCJcIikudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh2KSkge1xyXG4gICAgICAgIGhpdHMuYWRkKGtleSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIEFycmF5LmZyb20oaGl0cyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGV4dHJhY3RBdFRva2Vucyh0ZXh0OiBzdHJpbmcpOiBzdHJpbmdbXSB7XHJcbiAgY29uc3Qgb3V0OiBzdHJpbmdbXSA9IFtdO1xyXG4gIGNvbnN0IHJlID0gL0AoW0EtWmEtejAtOS5fLV0rKS9nO1xyXG4gIGxldCBtOiBSZWdFeHBFeGVjQXJyYXkgfCBudWxsO1xyXG4gIHdoaWxlICgobSA9IHJlLmV4ZWModGV4dCB8fCBcIlwiKSkpIHtcclxuICAgIGNvbnN0IHRvayA9IChtWzFdIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICBpZiAodG9rKSBvdXQucHVzaCh0b2spO1xyXG4gIH1cclxuICByZXR1cm4gb3V0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVyUGFydGljaXBhbnRzQnlNZW50aW9ucyh0ZXh0OiBzdHJpbmcsIHBhcnRpY2lwYW50czogc3RyaW5nW10pOiBzdHJpbmdbXSB7XHJcbiAgY29uc3QgYWxpYXNHcm91cHMgPSBleHRyYWN0TWVudGlvbkFsaWFzZXModGV4dCk7IC8vIGtleXMgbGlrZSAnZ3JvaycsICdjbGF1ZGUnXHJcbiAgY29uc3QgYWxpYXNUZXJtcyA9IGFsaWFzR3JvdXBzLmZsYXRNYXAoKGspID0+IE1FTlRJT05fQUxJQVNFU1trXSB8fCBbXSk7XHJcbiAgY29uc3QgYXRUZXJtcyA9IGV4dHJhY3RBdFRva2Vucyh0ZXh0KTtcclxuICBjb25zdCBzZWFyY2hUZXJtcyA9IEFycmF5LmZyb20obmV3IFNldChbLi4uYWxpYXNUZXJtcywgLi4uYXRUZXJtc10pKS5tYXAoKHMpID0+IHMudG9Mb3dlckNhc2UoKSk7XHJcbiAgaWYgKHNlYXJjaFRlcm1zLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHBhcnRpY2lwYW50cztcclxuXHJcbiAgY29uc3QgZmlsdGVyZWQgPSBwYXJ0aWNpcGFudHMuZmlsdGVyKChmdWxsSWQpID0+IHtcclxuICAgIGNvbnN0IHNpZCA9IHNob3J0TW9kZWxJZChmdWxsSWQpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICByZXR1cm4gc2VhcmNoVGVybXMuc29tZSgodGVybSkgPT4gc2lkLmluY2x1ZGVzKHRlcm0pKTtcclxuICB9KTtcclxuICAvLyBJZiBub3RoaW5nIG1hdGNoZWQsIGZhbGwgYmFjayB0byBvcmlnaW5hbCBsaXN0IHNvIHdlIG5ldmVyIHJldHVybiBlbXB0eVxyXG4gIHJldHVybiBmaWx0ZXJlZC5sZW5ndGggPiAwID8gZmlsdGVyZWQgOiBwYXJ0aWNpcGFudHM7XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiTUVOVElPTl9BTElBU0VTIiwiZ3JvayIsImNsYXVkZSIsImdwdDRvIiwiZ3B0NDEiLCJncHQiLCJzaG9ydE1vZGVsSWQiLCJpZCIsInBhcnRzIiwic3BsaXQiLCJsZW5ndGgiLCJ0b2tlbml6ZSIsInRleHQiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJmaWx0ZXIiLCJCb29sZWFuIiwiZXh0cmFjdE1lbnRpb25BbGlhc2VzIiwidG9rZW5zIiwiaGl0cyIsIlNldCIsImtleSIsInZhbHMiLCJPYmplY3QiLCJlbnRyaWVzIiwidiIsImluY2x1ZGVzIiwiYWRkIiwiQXJyYXkiLCJmcm9tIiwiZXh0cmFjdEF0VG9rZW5zIiwib3V0IiwicmUiLCJtIiwiZXhlYyIsInRvayIsInB1c2giLCJmaWx0ZXJQYXJ0aWNpcGFudHNCeU1lbnRpb25zIiwicGFydGljaXBhbnRzIiwiYWxpYXNHcm91cHMiLCJhbGlhc1Rlcm1zIiwiZmxhdE1hcCIsImsiLCJhdFRlcm1zIiwic2VhcmNoVGVybXMiLCJtYXAiLCJzIiwiZmlsdGVyZWQiLCJmdWxsSWQiLCJzaWQiLCJzb21lIiwidGVybSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/mentions.ts\n");

/***/ }),

/***/ "(rsc)/./lib/modes.ts":
/*!**********************!*\
  !*** ./lib/modes.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_MODE: () => (/* binding */ DEFAULT_MODE),\n/* harmony export */   MODES: () => (/* binding */ MODES),\n/* harmony export */   getModeConfig: () => (/* binding */ getModeConfig)\n/* harmony export */ });\nconst MODES = {\n    eco: {\n        id: \"eco\",\n        label: \"Eco\",\n        temperature: 0.2,\n        maxTokens: 160,\n        cacheTtlMs: 15 * 60 * 1000\n    },\n    budget: {\n        id: \"budget\",\n        label: \"Budget\",\n        temperature: 0.5,\n        maxTokens: 256,\n        cacheTtlMs: 15 * 60 * 1000\n    },\n    balanced: {\n        id: \"balanced\",\n        label: \"Balanced\",\n        temperature: 0.7,\n        maxTokens: 400,\n        cacheTtlMs: 10 * 60 * 1000\n    },\n    deluxe: {\n        id: \"deluxe\",\n        label: \"Deluxe\",\n        temperature: 0.8,\n        maxTokens: 600,\n        cacheTtlMs: 5 * 60 * 1000\n    },\n    council: {\n        id: \"council\",\n        label: \"Council\",\n        temperature: 0.7,\n        maxTokens: 300,\n        cacheTtlMs: 10 * 60 * 1000\n    }\n};\nconst DEFAULT_MODE = \"balanced\";\nfunction getModeConfig(mode) {\n    const key = mode || DEFAULT_MODE;\n    return MODES[key] || MODES[DEFAULT_MODE];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbW9kZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBVU8sTUFBTUEsUUFBb0M7SUFDL0NDLEtBQUs7UUFDSEMsSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxZQUFZLEtBQUssS0FBSztJQUN4QjtJQUNBQyxRQUFRO1FBQ05MLElBQUk7UUFDSkMsT0FBTztRQUNQQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsWUFBWSxLQUFLLEtBQUs7SUFDeEI7SUFDQUUsVUFBVTtRQUNSTixJQUFJO1FBQ0pDLE9BQU87UUFDUEMsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFlBQVksS0FBSyxLQUFLO0lBQ3hCO0lBQ0FHLFFBQVE7UUFDTlAsSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxZQUFZLElBQUksS0FBSztJQUN2QjtJQUNBSSxTQUFTO1FBQ1BSLElBQUk7UUFDSkMsT0FBTztRQUNQQyxhQUFhO1FBQ2JDLFdBQVc7UUFDWEMsWUFBWSxLQUFLLEtBQUs7SUFDeEI7QUFDRixFQUFFO0FBRUssTUFBTUssZUFBdUIsV0FBVztBQUV4QyxTQUFTQyxjQUFjQyxJQUFvQjtJQUNoRCxNQUFNQyxNQUFPRCxRQUFRRjtJQUNyQixPQUFPWCxLQUFLLENBQUNjLElBQUksSUFBSWQsS0FBSyxDQUFDVyxhQUFhO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGlib3QtY2hhdC1vcGVucm91dGVyLy4vbGliL21vZGVzLnRzPzMzNTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgTW9kZUlkID0gXCJlY29cIiB8IFwiYnVkZ2V0XCIgfCBcImJhbGFuY2VkXCIgfCBcImRlbHV4ZVwiIHwgXCJjb3VuY2lsXCI7XHJcblxyXG5leHBvcnQgdHlwZSBNb2RlQ29uZmlnID0ge1xyXG4gIGlkOiBNb2RlSWQ7XHJcbiAgbGFiZWw6IHN0cmluZztcclxuICB0ZW1wZXJhdHVyZTogbnVtYmVyO1xyXG4gIG1heFRva2VuczogbnVtYmVyO1xyXG4gIGNhY2hlVHRsTXM6IG51bWJlcjtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBNT0RFUzogUmVjb3JkPE1vZGVJZCwgTW9kZUNvbmZpZz4gPSB7XHJcbiAgZWNvOiB7XHJcbiAgICBpZDogXCJlY29cIixcclxuICAgIGxhYmVsOiBcIkVjb1wiLFxyXG4gICAgdGVtcGVyYXR1cmU6IDAuMixcclxuICAgIG1heFRva2VuczogMTYwLFxyXG4gICAgY2FjaGVUdGxNczogMTUgKiA2MCAqIDEwMDAsXHJcbiAgfSxcclxuICBidWRnZXQ6IHtcclxuICAgIGlkOiBcImJ1ZGdldFwiLFxyXG4gICAgbGFiZWw6IFwiQnVkZ2V0XCIsXHJcbiAgICB0ZW1wZXJhdHVyZTogMC41LFxyXG4gICAgbWF4VG9rZW5zOiAyNTYsXHJcbiAgICBjYWNoZVR0bE1zOiAxNSAqIDYwICogMTAwMCxcclxuICB9LFxyXG4gIGJhbGFuY2VkOiB7XHJcbiAgICBpZDogXCJiYWxhbmNlZFwiLFxyXG4gICAgbGFiZWw6IFwiQmFsYW5jZWRcIixcclxuICAgIHRlbXBlcmF0dXJlOiAwLjcsXHJcbiAgICBtYXhUb2tlbnM6IDQwMCxcclxuICAgIGNhY2hlVHRsTXM6IDEwICogNjAgKiAxMDAwLFxyXG4gIH0sXHJcbiAgZGVsdXhlOiB7XHJcbiAgICBpZDogXCJkZWx1eGVcIixcclxuICAgIGxhYmVsOiBcIkRlbHV4ZVwiLFxyXG4gICAgdGVtcGVyYXR1cmU6IDAuOCxcclxuICAgIG1heFRva2VuczogNjAwLFxyXG4gICAgY2FjaGVUdGxNczogNSAqIDYwICogMTAwMCxcclxuICB9LFxyXG4gIGNvdW5jaWw6IHtcclxuICAgIGlkOiBcImNvdW5jaWxcIixcclxuICAgIGxhYmVsOiBcIkNvdW5jaWxcIixcclxuICAgIHRlbXBlcmF0dXJlOiAwLjcsXHJcbiAgICBtYXhUb2tlbnM6IDMwMCxcclxuICAgIGNhY2hlVHRsTXM6IDEwICogNjAgKiAxMDAwLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgREVGQVVMVF9NT0RFOiBNb2RlSWQgPSBcImJhbGFuY2VkXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TW9kZUNvbmZpZyhtb2RlPzogc3RyaW5nIHwgbnVsbCk6IE1vZGVDb25maWcge1xyXG4gIGNvbnN0IGtleSA9IChtb2RlIHx8IERFRkFVTFRfTU9ERSkgYXMgTW9kZUlkO1xyXG4gIHJldHVybiBNT0RFU1trZXldIHx8IE1PREVTW0RFRkFVTFRfTU9ERV07XHJcbn1cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiTU9ERVMiLCJlY28iLCJpZCIsImxhYmVsIiwidGVtcGVyYXR1cmUiLCJtYXhUb2tlbnMiLCJjYWNoZVR0bE1zIiwiYnVkZ2V0IiwiYmFsYW5jZWQiLCJkZWx1eGUiLCJjb3VuY2lsIiwiREVGQVVMVF9NT0RFIiwiZ2V0TW9kZUNvbmZpZyIsIm1vZGUiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/modes.ts\n");

/***/ }),

/***/ "(rsc)/./lib/openrouter.ts":
/*!***************************!*\
  !*** ./lib/openrouter.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extraHeaders: () => (/* binding */ extraHeaders),\n/* harmony export */   orClient: () => (/* binding */ orClient)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\nconst orClient = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    baseURL: \"https://openrouter.ai/api/v1\",\n    apiKey: process.env.OPENROUTER_API_KEY\n});\nconst extraHeaders = {\n    \"HTTP-Referer\": process.env.APP_URL || \"\",\n    \"X-Title\": process.env.APP_NAME || \"ThinkTank\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvb3BlbnJvdXRlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFckIsTUFBTUMsV0FBVyxJQUFJRCw4Q0FBTUEsQ0FBQztJQUNqQ0UsU0FBUztJQUNUQyxRQUFRQyxRQUFRQyxHQUFHLENBQUNDLGtCQUFrQjtBQUN4QyxHQUFHO0FBRUksTUFBTUMsZUFBc0M7SUFDakQsZ0JBQWdCSCxRQUFRQyxHQUFHLENBQUNHLE9BQU8sSUFBSTtJQUN2QyxXQUFXSixRQUFRQyxHQUFHLENBQUNJLFFBQVEsSUFBSTtBQUNyQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGlib3QtY2hhdC1vcGVucm91dGVyLy4vbGliL29wZW5yb3V0ZXIudHM/YTY4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT3BlbkFJIGZyb20gXCJvcGVuYWlcIjtcblxuZXhwb3J0IGNvbnN0IG9yQ2xpZW50ID0gbmV3IE9wZW5BSSh7XG4gIGJhc2VVUkw6IFwiaHR0cHM6Ly9vcGVucm91dGVyLmFpL2FwaS92MVwiLFxuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk9QRU5ST1VURVJfQVBJX0tFWSEsXG59KTtcblxuZXhwb3J0IGNvbnN0IGV4dHJhSGVhZGVyczogUmVjb3JkPHN0cmluZyxzdHJpbmc+ID0ge1xuICBcIkhUVFAtUmVmZXJlclwiOiBwcm9jZXNzLmVudi5BUFBfVVJMIHx8IFwiXCIsXG4gIFwiWC1UaXRsZVwiOiBwcm9jZXNzLmVudi5BUFBfTkFNRSB8fCBcIlRoaW5rVGFua1wiLFxufTtcbiJdLCJuYW1lcyI6WyJPcGVuQUkiLCJvckNsaWVudCIsImJhc2VVUkwiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiT1BFTlJPVVRFUl9BUElfS0VZIiwiZXh0cmFIZWFkZXJzIiwiQVBQX1VSTCIsIkFQUF9OQU1FIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/openrouter.ts\n");

/***/ }),

/***/ "(rsc)/./lib/orchestrator.ts":
/*!*****************************!*\
  !*** ./lib/orchestrator.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coordinatedReplies: () => (/* binding */ coordinatedReplies),\n/* harmony export */   councilDebateRound: () => (/* binding */ councilDebateRound),\n/* harmony export */   fanOutReplies: () => (/* binding */ fanOutReplies),\n/* harmony export */   generateReplyForModel: () => (/* binding */ generateReplyForModel)\n/* harmony export */ });\n/* harmony import */ var _openrouter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./openrouter */ \"(rsc)/./lib/openrouter.ts\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _modes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modes */ \"(rsc)/./lib/modes.ts\");\n/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ \"(rsc)/./lib/routing.ts\");\n\n\n\n\n\nconst GENERIC_SYSTEM = \"You are an AI participant in a multi-agent group chat. Be concise (max 5 lines), additive, and practical. If you disagree, add a short counterpoint.\";\nconst responseCache = new Map();\nfunction makeCacheKey(parts) {\n    const h = (0,crypto__WEBPACK_IMPORTED_MODULE_2__.createHash)(\"sha256\");\n    for (const p of parts)h.update(p || \"\");\n    return h.digest(\"hex\");\n}\nfunction shortModelId(id) {\n    if (!id) return \"model\";\n    const parts = id.split(\"/\");\n    const last = parts[parts.length - 1] || id;\n    return last;\n}\nasync function fanOutReplies(thread, use, mode) {\n    const context = thread.map((m)=>`[${m.speaker}] ${m.text}`).join(\"\\n\");\n    const { temperature, maxTokens, cacheTtlMs } = (0,_modes__WEBPACK_IMPORTED_MODULE_3__.getModeConfig)(mode);\n    const selected = use && use.length > 0 ? use : (0,_routing__WEBPACK_IMPORTED_MODULE_4__.defaultParticipantsForMode)(mode || \"balanced\");\n    const tasks = (selected || []).filter((s)=>s && s !== \"user\").map(async (modelId)=>{\n        try {\n            return await generateReplyForModel(thread, modelId, mode);\n        } catch (err) {\n            const speaker = shortModelId(modelId);\n            const text = `(error from ${speaker}: ` + (err?.error?.message || err?.message || \"unknown error\") + `)`;\n            return {\n                id: (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomUUID)(),\n                speaker,\n                text,\n                ts: Date.now()\n            };\n        }\n    });\n    return Promise.all(tasks);\n}\nfunction simpleConfidenceScore(text) {\n    // Heuristic: longer, more structured responses get higher scores\n    const len = text.length;\n    const bullets = (text.match(/\\n[-*•]/g) || []).length;\n    const code = (text.match(/```/g) || []).length > 0 ? 1 : 0;\n    const score = Math.min(1, len / 600 * 0.7 + Math.min(0.3, bullets * 0.05) + code * 0.05);\n    return score;\n}\nasync function coordinatedReplies(thread, requested, mode) {\n    const baseReplies = await fanOutReplies(thread, requested || [], mode);\n    const avgConfidence = baseReplies.length ? baseReplies.map((r)=>simpleConfidenceScore(r.text)).reduce((a, b)=>a + b, 0) / baseReplies.length : 0;\n    const needEscalation = (mode === \"balanced\" || mode === \"budget\") && avgConfidence < 0.35;\n    let escalated = [];\n    if (needEscalation) {\n        const candidate = (0,_routing__WEBPACK_IMPORTED_MODULE_4__.escalationCandidateForMode)(mode || \"balanced\");\n        if (candidate) {\n            const more = await fanOutReplies(thread, [\n                candidate\n            ], mode);\n            escalated = more;\n        }\n    }\n    return [\n        ...baseReplies,\n        ...escalated\n    ];\n}\nasync function councilDebateRound(thread, replies, mode) {\n    // One short round where each non-user speaker adds a brief comment reacting to others\n    const lastUser = thread.filter((m)=>m.speaker === \"user\").slice(-1)[0];\n    const debateContext = [\n        ...lastUser ? [\n            `[user] ${lastUser.text}`\n        ] : [],\n        ...replies.map((r)=>`[${r.speaker}] ${r.text}`)\n    ].join(\"\\n\");\n    const speakers = Array.from(new Set(replies.map((r)=>r.speaker)));\n    const { temperature } = (0,_modes__WEBPACK_IMPORTED_MODULE_3__.getModeConfig)(mode);\n    const tasks = speakers.map(async (speaker)=>{\n        try {\n            const r = await _openrouter__WEBPACK_IMPORTED_MODULE_0__.orClient.chat.completions.create({\n                // Use a stable, widely available model for short debate reactions\n                model: \"openai/gpt-4o-mini\",\n                temperature,\n                max_tokens: 120,\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"You are participating in a short round-table debate. Provide a succinct (<= 4 lines) reaction that adds a new angle, clarifies a trade-off, or corrects a mistake. Be respectful and concrete.\"\n                    },\n                    {\n                        role: \"user\",\n                        content: `Topic and replies so far:\\n${debateContext}\\n\\nYour short reaction as ${speaker}:`\n                    }\n                ]\n            }, {\n                headers: _openrouter__WEBPACK_IMPORTED_MODULE_0__.extraHeaders\n            });\n            const text = r.choices?.[0]?.message?.content?.trim() || \"\";\n            const confidence = simpleConfidenceScore(text);\n            return {\n                id: (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomUUID)(),\n                speaker,\n                text,\n                ts: Date.now(),\n                confidence\n            };\n        } catch (err) {\n            const text = `(debate error from ${speaker}: ${err?.message || \"unknown\"})`;\n            return {\n                id: (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomUUID)(),\n                speaker,\n                text,\n                ts: Date.now()\n            };\n        }\n    });\n    return Promise.all(tasks);\n}\nasync function generateReplyForModel(thread, modelId, mode) {\n    const context = thread.map((m)=>`[${m.speaker}] ${m.text}`).join(\"\\n\");\n    // Include docs text if available for the default thread (lightweight demo)\n    let docs = \"\";\n    try {\n        const lastUser = thread.filter((m)=>m.speaker === \"user\").slice(-1)[0];\n        const query = lastUser?.text || \"\";\n        docs = (0,_db__WEBPACK_IMPORTED_MODULE_1__.getDocsText)(\"default\", 2000, query);\n    } catch  {}\n    const { temperature, maxTokens, cacheTtlMs } = (0,_modes__WEBPACK_IMPORTED_MODULE_3__.getModeConfig)(mode);\n    const cacheKey = makeCacheKey([\n        \"v1\",\n        modelId,\n        String(temperature),\n        String(maxTokens),\n        context,\n        docs\n    ]);\n    const now = Date.now();\n    const cached = responseCache.get(cacheKey);\n    if (cached && cached.expiresAt > now) {\n        const speaker = shortModelId(modelId);\n        const text = cached.text;\n        const confidence = simpleConfidenceScore(text);\n        return {\n            id: (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomUUID)(),\n            speaker,\n            text,\n            ts: now,\n            confidence\n        };\n    }\n    const r = await _openrouter__WEBPACK_IMPORTED_MODULE_0__.orClient.chat.completions.create({\n        model: modelId,\n        temperature,\n        max_tokens: maxTokens,\n        messages: [\n            {\n                role: \"system\",\n                content: GENERIC_SYSTEM\n            },\n            {\n                role: \"user\",\n                content: `Thread so far:\\n${context}${docs ? `\\n\\nReference docs:\\n${docs}` : \"\"}\\n\\nYour reply:`\n            }\n        ]\n    }, {\n        headers: _openrouter__WEBPACK_IMPORTED_MODULE_0__.extraHeaders\n    });\n    const text = r.choices?.[0]?.message?.content?.trim() || \"\";\n    responseCache.set(cacheKey, {\n        text,\n        expiresAt: now + cacheTtlMs\n    });\n    const speaker = shortModelId(modelId);\n    const confidence = simpleConfidenceScore(text);\n    return {\n        id: (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomUUID)(),\n        speaker,\n        text,\n        ts: now,\n        confidence\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/orchestrator.ts\n");

/***/ }),

/***/ "(rsc)/./lib/routing.ts":
/*!************************!*\
  !*** ./lib/routing.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultParticipantsForMode: () => (/* binding */ defaultParticipantsForMode),\n/* harmony export */   escalationCandidateForMode: () => (/* binding */ escalationCandidateForMode)\n/* harmony export */ });\n// Recommended model IDs on OpenRouter. Adjust to your account/catalog.\nconst CHEAP_MODELS = [\n    \"anthropic/claude-3-haiku\",\n    \"openai/gpt-4o-mini\"\n];\nconst MID_MODELS = [\n    \"anthropic/claude-3.5-sonnet\",\n    \"openai/gpt-4o\",\n    \"x-ai/grok-4\"\n];\nconst PREMIUM_MODELS = [\n    \"openai/gpt-4.1\",\n    \"openai/gpt-4.1-mini\",\n    \"anthropic/claude-3.5-sonnet\"\n];\nfunction defaultParticipantsForMode(mode) {\n    switch(mode){\n        case \"eco\":\n        case \"budget\":\n            return CHEAP_MODELS.slice(0, 2);\n        case \"balanced\":\n            return [\n                CHEAP_MODELS[0],\n                MID_MODELS[0],\n                MID_MODELS[1]\n            ].filter(Boolean);\n        case \"deluxe\":\n            return [\n                MID_MODELS[0],\n                MID_MODELS[1],\n                PREMIUM_MODELS[0],\n                CHEAP_MODELS[0]\n            ].filter(Boolean);\n        case \"council\":\n            return [\n                CHEAP_MODELS[0],\n                MID_MODELS[0],\n                MID_MODELS[1],\n                PREMIUM_MODELS[0]\n            ].filter(Boolean);\n        default:\n            return MID_MODELS.slice(0, 2);\n    }\n}\nfunction escalationCandidateForMode(mode) {\n    switch(mode){\n        case \"eco\":\n            return null; // don't escalate in eco\n        case \"budget\":\n            return MID_MODELS[0] || null;\n        case \"balanced\":\n            return MID_MODELS[1] || PREMIUM_MODELS[0] || null;\n        case \"deluxe\":\n        case \"council\":\n            return PREMIUM_MODELS[0] || MID_MODELS[0] || null;\n        default:\n            return MID_MODELS[0] || null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcm91dGluZy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUVBLHVFQUF1RTtBQUN2RSxNQUFNQSxlQUFlO0lBQ25CO0lBQ0E7Q0FDRDtBQUVELE1BQU1DLGFBQWE7SUFDakI7SUFDQTtJQUNBO0NBQ0Q7QUFFRCxNQUFNQyxpQkFBaUI7SUFDckI7SUFDQTtJQUNBO0NBQ0Q7QUFFTSxTQUFTQywyQkFBMkJDLElBQVk7SUFDckQsT0FBUUE7UUFDTixLQUFLO1FBQ0wsS0FBSztZQUNILE9BQU9KLGFBQWFLLEtBQUssQ0FBQyxHQUFHO1FBQy9CLEtBQUs7WUFDSCxPQUFPO2dCQUFDTCxZQUFZLENBQUMsRUFBRTtnQkFBRUMsVUFBVSxDQUFDLEVBQUU7Z0JBQUVBLFVBQVUsQ0FBQyxFQUFFO2FBQUMsQ0FBQ0ssTUFBTSxDQUFDQztRQUNoRSxLQUFLO1lBQ0gsT0FBTztnQkFBQ04sVUFBVSxDQUFDLEVBQUU7Z0JBQUVBLFVBQVUsQ0FBQyxFQUFFO2dCQUFFQyxjQUFjLENBQUMsRUFBRTtnQkFBRUYsWUFBWSxDQUFDLEVBQUU7YUFBQyxDQUFDTSxNQUFNLENBQUNDO1FBQ25GLEtBQUs7WUFDSCxPQUFPO2dCQUFDUCxZQUFZLENBQUMsRUFBRTtnQkFBRUMsVUFBVSxDQUFDLEVBQUU7Z0JBQUVBLFVBQVUsQ0FBQyxFQUFFO2dCQUFFQyxjQUFjLENBQUMsRUFBRTthQUFDLENBQUNJLE1BQU0sQ0FBQ0M7UUFDbkY7WUFDRSxPQUFPTixXQUFXSSxLQUFLLENBQUMsR0FBRztJQUMvQjtBQUNGO0FBRU8sU0FBU0csMkJBQTJCSixJQUFZO0lBQ3JELE9BQVFBO1FBQ04sS0FBSztZQUNILE9BQU8sTUFBTSx3QkFBd0I7UUFDdkMsS0FBSztZQUNILE9BQU9ILFVBQVUsQ0FBQyxFQUFFLElBQUk7UUFDMUIsS0FBSztZQUNILE9BQU9BLFVBQVUsQ0FBQyxFQUFFLElBQUlDLGNBQWMsQ0FBQyxFQUFFLElBQUk7UUFDL0MsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPQSxjQUFjLENBQUMsRUFBRSxJQUFJRCxVQUFVLENBQUMsRUFBRSxJQUFJO1FBQy9DO1lBQ0UsT0FBT0EsVUFBVSxDQUFDLEVBQUUsSUFBSTtJQUM1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGlib3QtY2hhdC1vcGVucm91dGVyLy4vbGliL3JvdXRpbmcudHM/MzEwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE1vZGVJZCB9IGZyb20gXCIuL21vZGVzXCI7XHJcblxyXG4vLyBSZWNvbW1lbmRlZCBtb2RlbCBJRHMgb24gT3BlblJvdXRlci4gQWRqdXN0IHRvIHlvdXIgYWNjb3VudC9jYXRhbG9nLlxyXG5jb25zdCBDSEVBUF9NT0RFTFMgPSBbXHJcbiAgXCJhbnRocm9waWMvY2xhdWRlLTMtaGFpa3VcIixcclxuICBcIm9wZW5haS9ncHQtNG8tbWluaVwiLFxyXG5dO1xyXG5cclxuY29uc3QgTUlEX01PREVMUyA9IFtcclxuICBcImFudGhyb3BpYy9jbGF1ZGUtMy41LXNvbm5ldFwiLFxyXG4gIFwib3BlbmFpL2dwdC00b1wiLFxyXG4gIFwieC1haS9ncm9rLTRcIixcclxuXTtcclxuXHJcbmNvbnN0IFBSRU1JVU1fTU9ERUxTID0gW1xyXG4gIFwib3BlbmFpL2dwdC00LjFcIixcclxuICBcIm9wZW5haS9ncHQtNC4xLW1pbmlcIixcclxuICBcImFudGhyb3BpYy9jbGF1ZGUtMy41LXNvbm5ldFwiLFxyXG5dO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRQYXJ0aWNpcGFudHNGb3JNb2RlKG1vZGU6IE1vZGVJZCk6IHN0cmluZ1tdIHtcclxuICBzd2l0Y2ggKG1vZGUpIHtcclxuICAgIGNhc2UgXCJlY29cIjpcclxuICAgIGNhc2UgXCJidWRnZXRcIjpcclxuICAgICAgcmV0dXJuIENIRUFQX01PREVMUy5zbGljZSgwLCAyKTtcclxuICAgIGNhc2UgXCJiYWxhbmNlZFwiOlxyXG4gICAgICByZXR1cm4gW0NIRUFQX01PREVMU1swXSwgTUlEX01PREVMU1swXSwgTUlEX01PREVMU1sxXV0uZmlsdGVyKEJvb2xlYW4pO1xyXG4gICAgY2FzZSBcImRlbHV4ZVwiOlxyXG4gICAgICByZXR1cm4gW01JRF9NT0RFTFNbMF0sIE1JRF9NT0RFTFNbMV0sIFBSRU1JVU1fTU9ERUxTWzBdLCBDSEVBUF9NT0RFTFNbMF1dLmZpbHRlcihCb29sZWFuKTtcclxuICAgIGNhc2UgXCJjb3VuY2lsXCI6XHJcbiAgICAgIHJldHVybiBbQ0hFQVBfTU9ERUxTWzBdLCBNSURfTU9ERUxTWzBdLCBNSURfTU9ERUxTWzFdLCBQUkVNSVVNX01PREVMU1swXV0uZmlsdGVyKEJvb2xlYW4pO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgcmV0dXJuIE1JRF9NT0RFTFMuc2xpY2UoMCwgMik7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZXNjYWxhdGlvbkNhbmRpZGF0ZUZvck1vZGUobW9kZTogTW9kZUlkKTogc3RyaW5nIHwgbnVsbCB7XHJcbiAgc3dpdGNoIChtb2RlKSB7XHJcbiAgICBjYXNlIFwiZWNvXCI6XHJcbiAgICAgIHJldHVybiBudWxsOyAvLyBkb24ndCBlc2NhbGF0ZSBpbiBlY29cclxuICAgIGNhc2UgXCJidWRnZXRcIjpcclxuICAgICAgcmV0dXJuIE1JRF9NT0RFTFNbMF0gfHwgbnVsbDtcclxuICAgIGNhc2UgXCJiYWxhbmNlZFwiOlxyXG4gICAgICByZXR1cm4gTUlEX01PREVMU1sxXSB8fCBQUkVNSVVNX01PREVMU1swXSB8fCBudWxsO1xyXG4gICAgY2FzZSBcImRlbHV4ZVwiOlxyXG4gICAgY2FzZSBcImNvdW5jaWxcIjpcclxuICAgICAgcmV0dXJuIFBSRU1JVU1fTU9ERUxTWzBdIHx8IE1JRF9NT0RFTFNbMF0gfHwgbnVsbDtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHJldHVybiBNSURfTU9ERUxTWzBdIHx8IG51bGw7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuIl0sIm5hbWVzIjpbIkNIRUFQX01PREVMUyIsIk1JRF9NT0RFTFMiLCJQUkVNSVVNX01PREVMUyIsImRlZmF1bHRQYXJ0aWNpcGFudHNGb3JNb2RlIiwibW9kZSIsInNsaWNlIiwiZmlsdGVyIiwiQm9vbGVhbiIsImVzY2FsYXRpb25DYW5kaWRhdGVGb3JNb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/routing.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/formdata-node","vendor-chunks/openai","vendor-chunks/tr46","vendor-chunks/web-streams-polyfill","vendor-chunks/node-fetch","vendor-chunks/whatwg-url","vendor-chunks/event-target-shim","vendor-chunks/agentkeepalive","vendor-chunks/form-data-encoder","vendor-chunks/webidl-conversions","vendor-chunks/abort-controller","vendor-chunks/ms","vendor-chunks/humanize-ms"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmessages%2Froute&page=%2Fapi%2Fmessages%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmessages%2Froute.ts&appDir=D%3A%5CCursor%5CThinkTank%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5CThinkTank&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();